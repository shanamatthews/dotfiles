# ----------------------------------- mine -----------------------------------
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# form vim/tmux d/y buffer sync
set -g focus-events

# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# add double-tap meta key to toggle last window
bind-key C-a last-window

# vi keys to navigate panes
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# vi keys to resize
bind -r C-k resize-pane -U 1
bind -r C-j resize-pane -D 1
bind -r C-h resize-pane -L 1
bind -r C-l resize-pane -R 1

# create more intuitive split key combos (same as modern screen)
unbind |
bind | split-window -h
bind '\' split-window -h
bind 'C-\' split-window -h
unbind -
bind - split-window -v
unbind _
bind _ split-window -v

# vi for copy mode
# setw -g mode-keys vi

# colors, clock, and stuff
set -g default-terminal "xterm-256color" # works, but oh so wrong
#set -ga terminal-overrides ",xterm-256color*:Tc"
# set -g default-terminal "screen-256color"
set -g clock-mode-style 12
setw -g clock-mode-colour cyan
# set -g base-index 1

# -------------------------------- status bar --------------------------------

# defaults
# set -g status on
# set -g status-interval 1
# set -g status-justify left
# set -g status-left "[#S]"
# set -g status-left-length 10
# set -g status-left-style default
# set -g status-position bottom
# set -g status-right " "#{=21:pane_title" %H:%M %d-%b-%y"
# set -g status-right-length 40
# set -g status-right-style default
# set -g status-fg=black
# set -g status-bg=green

# my stuff
set -g status on
set -g status-interval 1
set -g status-justify left
set -g status-keys vi
set -g status-position bottom
set -g status-left "[#S]: "
set -g status-left-length 10
set -g status-right "#(pomo) %A, %B %-e, %Y, %-l:%M%p %Z" 
set -g status-right-length 50

set -g window-status-current-style "underscore"
set -g automatic-rename on

# -------------------------------- mouse stuff -------------------------------
# set -g mouse on
# look, idk what these two lines do, but they break the fancy stuff
# unbind -n MouseDrag1Pane
# unbind -Tcopy-mode MouseDrag1Pane

# macOS only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"


# ----------------------------------- other ----------------------------------


# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
# set -g default-terminal "tmux-256color"

# No bells at all
set -g bell-action none

# Keep windows around after they exit
set -g remain-on-exit on


# Some extra key bindings to select higher numbered windows
bind F1 selectw -t:10
bind F2 selectw -t:11
bind F3 selectw -t:12
bind F4 selectw -t:13
bind F5 selectw -t:14
bind F6 selectw -t:15
bind F7 selectw -t:16
bind F8 selectw -t:17
bind F9 selectw -t:18
bind F10 selectw -t:19
bind F11 selectw -t:20
bind F12 selectw -t:21

# A key to toggle between smallest and largest sizes if a window is visible in
# multiple places
# bind F set -w window-size

# Keys to toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# if run as "tmux attach", create a session if one does not already exist
# new-session -n $HOST

# Create a single default session - because a session is created here, tmux
# should be started with "tmux attach" rather than "tmux new"
# OR FUCKING DONT THIS IS A STRAIGHT UP NIGHTMARE
# new -d -s0 -nirssi 'exec irssi'
# set -t0:0 monitor-activity on
# set  -t0:0 aggressive-resize on
# neww -d -ntodo 'exec emacs ~/TODO'
# setw -t0:1 aggressive-resize on
# neww -d -nmutt 'exec mutt'
# setw -t0:2 aggressive-resize on
# neww -d
# neww -d
# neww -d
